usethis::use_data_raw()
biodiversityPL <- vroom::vroom("data-raw/occurences_and_media_PL.csv")
biodiversityPL
biodiversityPL |> View()
biodiversityPL$mediaRightsHolder
biodiversityPL$mediaRightsHolder |> unique()
biodiversityPL$mediaLicense |> unique()
biodiversityPL <- readr::read_csv("data-raw/occurences_and_media_PL.csv")
biodiversityPL$mediaLicense
biodiversityPL$mediaLicense |> unique()
biodiversityPL$mediaRightsHolder |> unique()
biodiversityPL$mediaAccessURI |> unique()
biodiversityPL <- readr::read_csv("data-raw/occurences_and_media_PL.csv")
usethis::use_data(biodiversityPL, overwrite = TRUE)
devtools::load_all(".")
myApp()
monthApp()
usethis::use_package("shiny")
devtools::load_all(".")
usethis::use_package("leaflet")
usethis::use_build_ignore("app.R")
NS("map")
NS("map", "asdd")
NS(id, "feedback")
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
biodiversityPL
biodiversityPL$vernacularName
biodiversityPL$scientificName
biodiversityPL
biodiversityPL$longitudeDecimal
biodiversityPL$geodeticDatum
biodiversityPL |> dplyr::filter(scientificName == "Corvus cornix")
quakes
class(quakes)
biodiversityPL$geodeticDatum
biodiversityPL$geodeticDatum |> unique()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
biodiversityPL$longitudeDecimal
biodiversityPL$scientificName
data = biodiversityPL |> dplyr::filter(scientificName == "Corvus cornix")
data
RdYlBu <- leaflet::colorFactor("RdYlBu", domain = data$kingdom)
leaflet::leaflet(data) |>
#leaflet::setView(lng = -93.65, lat = 42.0285, zoom = 7) %>%
leaflet::addProviderTiles("OpenStreetMap", layerId = "osm") |>
leaflet::addCircleMarkers(lng = ~longitudeDecimal, lat = ~latitudeDecimal,
radius = ~coordinateUncertaintyInMeters,
color = ~RdYlBu(kingdom)) |>
leaflet::addMarkers(clusterOptions = leaflet::markerClusterOptions())
RdYlBu <- leaflet::colorFactor("RdYlBu", domain = data$kingdom)
leaflet::leaflet(data) |>
leaflet::setView(lng = -93.65, lat = 42.0285, zoom = 7) %>%
leaflet::addProviderTiles("OpenStreetMap", layerId = "osm") |>
leaflet::addCircleMarkers(lng = ~longitudeDecimal, lat = ~latitudeDecimal,
radius = ~coordinateUncertaintyInMeters,
color = ~RdYlBu(kingdom)) |>
leaflet::addMarkers(clusterOptions = leaflet::markerClusterOptions())
RdYlBu <- leaflet::colorFactor("RdYlBu", domain = data$kingdom)
leaflet::leaflet(data) |>
leaflet::setView(lng = -93.65, lat = 42.0285, zoom = 7) |>
leaflet::addProviderTiles("OpenStreetMap", layerId = "osm") |>
leaflet::addCircleMarkers(lng = ~longitudeDecimal, lat = ~latitudeDecimal,
radius = ~coordinateUncertaintyInMeters,
color = ~RdYlBu(kingdom)) |>
leaflet::addMarkers(clusterOptions = leaflet::markerClusterOptions())
data
data$latitudeDecimal
data$longitudeDecimal
RdYlBu <- leaflet::colorFactor("RdYlBu", domain = data$kingdom)
leaflet::leaflet(data) |>
leaflet::setView(lng = -93.65, lat = 42.0285, zoom = 7) |>
leaflet::addProviderTiles("OpenStreetMap", layerId = "osm") |>
leaflet::addCircleMarkers(lng = ~longitudeDecimal, lat = ~latitudeDecimal,
radius = ~coordinateUncertaintyInMeters,
color = ~RdYlBu(kingdom))
RdYlBu <- leaflet::colorFactor("RdYlBu", domain = data$kingdom)
leaflet::leaflet(data) |>
leaflet::setView(lng = -93.65, lat = 42.0285, zoom = 7) |>
leaflet::addProviderTiles("OpenStreetMap", layerId = "osm") |>
leaflet::addCircleMarkers(lng = ~longitudeDecimal, lat = ~latitudeDecimal,
color = ~RdYlBu(kingdom))
RdYlBu <- leaflet::colorFactor("RdYlBu", domain = data$kingdom)
leaflet::leaflet(data) |>
#leaflet::setView(lng = 20, lat = 52, zoom = 7) %>%
leaflet::addProviderTiles("OpenStreetMap", layerId = "osm") |>
leaflet::addCircleMarkers(lng = ~longitudeDecimal, lat = ~latitudeDecimal,
#radius = ~coordinateUncertaintyInMeters,
color = ~RdYlBu(kingdom),
clusterOptions = leaflet::markerClusterOptions())
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
devtools::load_all()
biodiversityApp()
shiny::runGitHub("dreamRs/fresh", subdir = "inst/examples/create")
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
biodiversityApp()
biodiversityPL |> dplyr::pull(scientificName)
biodiversityPL |> dplyr::pull(scientificName) |> unique()
devtools::load_all()
biodiversityApp()
biodiversityPL |> dplyr::pull(scientificName) |> unique() |> sort()
devtools::load_all()
biodiversityPL |> dplyr::pull(scientificName) |> unique() |> sort()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
devtools::load_all()
biodiversityApp()
usethis::use_package("leaflet.extras")
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
usethis::use_package("leafem")
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
devtools::load_all()
biodiversityApp()
